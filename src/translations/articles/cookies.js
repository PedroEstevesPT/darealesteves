const translations  = {
    "title": {
        "en": "Cookies" ,
        "pt": "Cookies"
    },
    "whatAreCookiesTitle": {
        "en": "What are Cookies ?",
        "pt": "O que são Cookies ?"
    },

    "whatAreCookiesText": {
        "pt": "Cookies são pequenos pedaços de dados que um website envia para o navegador web \
        do utilizador e que são armazenados no dispositivo do utilizador. Os cookies podem ser utilizados \
         para lembrar as preferências do utilizador, acompanhar itens num carrinho de compras ou lembrar \
          as informações de login do utilizador para visitas futuras.\
        <br><br>\
        Quando um utilizador visita um website, o servidor pode enviar um cookie para o navegador do utilizador, \
        que é então armazenado no dispositivo do utilizador. Em visitas subsequentes ao mesmo website, o navegador \
         envia o cookie de volta para o servidor, permitindo que o website se lembre das interações anteriores do utilizador.",
        "en": "Cookies refer to small pieces of data that a \
        website sends to a user's web browser  which is stored on the user's device. \
        Cookies can e used to remember user preferences, keep track of items in a shopping kart or remember\
         a user's login information for future visits. \
        <br><br> \
        When a user visits a website, the server can send a cookie to the user's browser, \
        which is then stored on the user's device. \
        On subsequent visits to the same website, the browser sends the cookie back to the server, \
        allowing the website to remember the user's previous interactions."
    },

    "commonUsesTitle": {
        "en": "5 most common uses",
        "pt": "5 casos mais comuns"
    },
    "commonUsesText": {
        "en": "<li> Session Management (e.g. cookie which ensures the user is logged while he navigates website)</li>\
        <li> Personalization (e.g. remember website language preference)</li> \
        <li> Analytics (e.g. collect data on how users interact with a website)</li>\
        <li> Advertising (e.g. Ad networks use cookes to track users across different websites and display relevant ads)</li>\
        <li> Security (can be used to prevent cross-site request forgery (CSRF) attacks.)</li>\
        <br>\
        The 5 bullets above were generated by ChatGPT.\
        In past projects I had used JWT to manage sessions after the users being authenticated on the backend hence\
         I wanted to know the differences \
        between cookies and JWT when it comes to session management. ",
        "pt": " <li>Gestão de Sessões (por exemplo, cookie que garante que o utilizador está autenticado enquanto navega no website)</li>\
                <li>Personalização (por exemplo, lembrar a preferência de idioma do website)</li>\
                <li>Análises (por exemplo, recolher dados sobre como os utilizadores interagem com um website)</li>\
                <li>Publicidade (por exemplo, redes de anúncios utilizam cookies para rastrear os utilizadores em diferentes websites e exibir anúncios relevantes)</li>\
                <li>Segurança (pode ser utilizado para prevenir ataques de falsificação de solicitação entre sites (CSRF))</li>\
                <br>\
                Os 5 bullets acima foram geradas pelo ChatGPT. Em projetos anteriores, utilizei JWT para gerir sessões depois dos utilizadores serem autenticados no backend, por isso queria saber as diferenças entre cookies e JWT no que diz respeito à gestão de sessões."
    },
    "jwtVsCookiesTitle":{
        "en": "Differences between JWT and Cookies",
        "pt": "Diferenças entre JWT e Cookies"
    },
    "jwtVsCookiesText":{
        "en": "<li>Structure: JWT is a self-contained JSON object that contains claims (or statements) that can be used to identify and authenticate a user. Cookies, on the other hand, are small data files that are stored on the client's device and contain arbitrary data that can be read by the server. </li> \
        <br> \
        <li>Storage location: JWTs are typically stored in the client-side storage (e.g. browser's local storage or session storage), while cookies are stored in the browser's cookie jar. </li> \
        <br> \
        <li>Security: Both JWTs and cookies can be vulnerable to security threats such as cross-site scripting (XSS) attacks and cross-site request forgery (CSRF) attacks. However, JWTs have some advantages in terms of security, as they can be digitally signed and verified to ensure their authenticity and integrity. </li> \
        <br> \
        <li>Use cases: JWTs are often used for stateless authentication in APIs, where a client sends a JWT token with each API request to authenticate itself. Cookies, on the other hand, are often used for stateful authentication in web applications, where the server maintains a session state for each user and associates it with a cookie. </li>",
        "pt": "<li> Estrutura: JWT é um objeto JSON autocontido que contém declarações (ou informações) que podem ser utilizadas para identificar e autenticar um utilizador. Cookies, por outro lado, são pequenos ficheiros de dados que são armazenados no dispositivo do cliente e contêm dados arbitrários que podem ser lidos pelo servidor. </li> \
              <br> \
              <li>Local de armazenamento: JWTs são tipicamente armazenados no armazenamento do lado do cliente (por exemplo, armazenamento local ou de sessão do navegador), enquanto os cookies são armazenados no arquivo de cookies do navegador. </li> \
              <br> \
              <li>Segurança: Tanto JWTs quanto cookies podem ser vulneráveis a ameaças de segurança, como ataques de script entre sites (XSS) e ataques de falsificação de solicitação entre sites (CSRF). No entanto, os JWTs possuem algumas vantagens em termos de segurança, pois podem ser assinados digitalmente e verificados para garantir sua autenticidade e integridade. </li> \
              <br> \
              <li>Casos de uso: JWTs são frequentemente utilizados para autenticação sem estado em APIs, onde um cliente envia um token JWT com cada solicitação de API para se autenticar. Cookies, por outro lado, são frequentemente utilizados para autenticação com estado em aplicações web, onde o servidor mantém um estado de sessão para cada utilizador e associa-o a um cookie. </li>"
    }
}

export default translations;